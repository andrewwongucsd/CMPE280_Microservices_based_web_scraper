'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _child_process = require('child_process');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _winston = require('winston');

var _winston2 = _interopRequireDefault(_winston);

var _formatter = require('../formatter');

var _formatter2 = _interopRequireDefault(_formatter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Splunk = function (_winston$Transport) {
	_inherits(Splunk, _winston$Transport);

	function Splunk(opts) {
		_classCallCheck(this, Splunk);

		var _this = _possibleConstructorReturn(this, (Splunk.__proto__ || Object.getPrototypeOf(Splunk)).call(this, opts));

		_this.name = 'splunk';
		if (opts && opts.agent) {
			_this.agent = opts.agent;
			_this.agent.url = opts.splunkUrl;
		} else {
			_this.agent = (0, _child_process.fork)(_path2.default.resolve(__dirname, '..', 'agent.js'), [opts.splunkUrl]);
		}
		return _this;
	}

	_createClass(Splunk, [{
		key: 'log',
		value: function log(level, message, meta, callback) {
			var formattedMessage = (0, _formatter2.default)({ level, message, meta, splunkFriendly: true });
			// HACK: For AWS Lambda
			// Compare the breaking API change somewhere ebetween 0.10 and 4.x.x
			// https://nodejs.org/docs/v0.10.36/api/child_process.html#child_process_child_send_message_sendhandle
			// https://nodejs.org/api/child_process.html#child_process_child_send_message_sendhandle_callback
			if (/^v0\.10/.test(process.version)) {
				this.agent.send(formattedMessage);
				setTimeout(function () {
					return callback(undefined, true);
				});
			} else {
				this.agent.send(formattedMessage, function (err) {
					return callback(err, true);
				});
			}
		}
	}]);

	return Splunk;
}(_winston2.default.Transport);

exports.default = Splunk;