'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _functionLogger = require('./lib/function-logger');

var _functionLogger2 = _interopRequireDefault(_functionLogger);

var _appLogger = require('./lib/app-logger');

var _appLogger2 = _interopRequireDefault(_appLogger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('isomorphic-fetch');

var getLogger = function getLogger() {
	if (process.env.AWS_LAMBDA_FUNCTION_NAME) {
		// Lambda environment - don't use Winston
		return new _functionLogger2.default();
	} else {
		// app environment - use Winston
		var _logger = new _appLogger2.default({
			level: process.env.CONSOLE_LOG_LEVEL || 'silly'
		});

		if (process.env.NODE_ENV === 'production' && process.env.SPLUNK_HEC_TOKEN) {
			_logger.addSplunkHEC(process.env.SPLUNK_LOG_LEVEL || 'warn');
		}

		// log to splunk only in production
		if (process.env.NODE_ENV === 'production' && process.env.SPLUNK_URL) {
			_logger.addSplunk(process.env.SPLUNK_URL, process.env.SPLUNK_LOG_LEVEL || 'warn');
		}
		return _logger;
	}
};

var logger = getLogger();
exports.default = logger;